{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs\\\\Projects\\\\LMS\\\\web-app-test\\\\Web-development-project\\\\frontend\\\\src\\\\components\\\\TeachForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport background from './images/background.jpg';\nimport { useHistory } from 'react-router-dom';\nimport './teachSign.css'; //This is the account creation page for teachers\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TeachForm = () => {\n  _s();\n\n  const history = useHistory();\n  const styles = {\n    header: {\n      backgroundImage: `url(${background})`,\n      height: '100vh',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover'\n    },\n    content: {\n      position: 'center',\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgba(255, 255, 255, 0.3)'\n    }\n  };\n  const [subs] = useState([{\n    id: \"1\",\n    label: \"Maths\",\n    value: \"Maths\"\n  }, {\n    id: \"2\",\n    label: \"Physics\",\n    value: \"physics\"\n  }, {\n    id: \"3\",\n    label: \"chemistry\",\n    value: \"chemsitry\"\n  }, {\n    id: \"4\",\n    label: \"it\",\n    value: \"it\"\n  }]);\n  const [values] = useState({\n    uname: '',\n    password: '',\n    subject: ''\n  });\n  /*Note! i did not use the button component i defined here as styling for this button \r\n  was already in the form template i used*/\n  //This function submits an http request and then sends the user back to the login page\n  //no databinding is done so even though an http request is made no data is sent to the server\n\n  const submitForm = e => {\n    e.preventDefault();\n    axios.post('https://run.mocky.io/v3/7a060cf1-0d9d-41c0-8e98-5fd532b99c43', {\n      values\n    }).then(function (response) {\n      console.log(response);\n      history.push('/teachSign');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.header,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"form animated flipInX\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign up as a Teacher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginbox\",\n          onSubmit: submitForm,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Name\",\n            type: \"text\",\n            id: \"username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"School\",\n            type: \"text\",\n            id: \"username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Username\",\n            type: \"text\",\n            id: \"username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"I'm teaching:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"subject\",\n            id: \"subject\",\n            children: subs.map(subs => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subs.value,\n              children: subs.label\n            }, Math.random().toString(36).substr(2, 9), false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sign\",\n            type: \"submit\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TeachForm, \"kLIkDauSClyJh9Q9G+l9TqXKre4=\", false, function () {\n  return [useHistory];\n});\n\n_c = TeachForm;\nexport default TeachForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeachForm\");","map":{"version":3,"sources":["D:/Docs/Projects/LMS/web-app-test/Web-development-project/frontend/src/components/TeachForm.js"],"names":["React","useState","axios","background","useHistory","TeachForm","history","styles","header","backgroundImage","height","backgroundPosition","backgroundRepeat","backgroundSize","content","position","width","backgroundColor","subs","id","label","value","values","uname","password","subject","submitForm","e","preventDefault","post","then","response","console","log","push","map","Math","random","toString","substr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport background from './images/background.jpg'\r\nimport { useHistory } from 'react-router-dom';\r\nimport './teachSign.css'\r\n\r\n//This is the account creation page for teachers\r\nexport const TeachForm = () => {\r\n    const history = useHistory();\r\n\r\n    const styles = {\r\n        header: {\r\n          backgroundImage: `url(${background})`,\r\n          height: '100vh',\r\n          backgroundPosition: 'center',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'cover'\r\n        },\r\n      \r\n        content: {\r\n          position:'center',\r\n          height: '100%',\r\n          width: '100%',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        }\r\n    }\r\n\r\n    const [subs] = useState([\r\n        {id:\"1\",label:\"Maths\", value:\"Maths\"},\r\n        {id:\"2\",label:\"Physics\", value:\"physics\"},\r\n        {id:\"3\",label:\"chemistry\", value:\"chemsitry\"},\r\n        {id:\"4\",label:\"it\", value:\"it\"}\r\n    ]);\r\n\r\n    const [values] = useState({uname:'',password:'',subject:''});\r\n    \r\n    /*Note! i did not use the button component i defined here as styling for this button \r\n    was already in the form template i used*/ \r\n\r\n    //This function submits an http request and then sends the user back to the login page\r\n    //no databinding is done so even though an http request is made no data is sent to the server\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        axios.post('https://run.mocky.io/v3/7a060cf1-0d9d-41c0-8e98-5fd532b99c43',{values})\r\n        .then(function(response){\r\n            console.log(response);\r\n            history.push('/teachSign');\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div style={styles.header}>\r\n            <div style={styles.content}>\r\n                <section className=\"form animated flipInX\">\r\n                <h2>Sign up as a Teacher</h2>\r\n                <form className=\"loginbox\" onSubmit={submitForm}>\r\n                    \r\n                    <input placeholder=\"Name\" type=\"text\" id=\"username\" required></input>\r\n                    <input placeholder=\"School\" type=\"text\" id=\"username\" required></input>\r\n                    <input placeholder=\"Username\" type=\"text\" id=\"username\" required></input>\r\n                    <input placeholder=\"Password\" type=\"password\" id=\"password\" name=\"password\" required></input>\r\n                    <label>I'm teaching:</label>\r\n                    <br/>\r\n                    <select name=\"subject\" id=\"subject\">\r\n                        {subs.map((subs)=>(\r\n                            <option key={Math.random().toString(36).substr(2,9)} value={subs.value}>{subs.label}</option>\r\n                        ))}\r\n                    </select><br/>\r\n\r\n                <button id=\"sign\" type=\"submit\" >Sign up</button><br/>\r\n                </form>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeachForm"]},"metadata":{},"sourceType":"module"}