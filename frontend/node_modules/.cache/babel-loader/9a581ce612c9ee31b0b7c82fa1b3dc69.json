{"ast":null,"code":"var _jsxFileName = \"D:\\\\Docs\\\\Projects\\\\LMS\\\\web-app-test\\\\Web-development-project\\\\frontend\\\\src\\\\components\\\\StdForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport background from './images/background.jpg';\nimport './studentSign.css'; //This is the student sign in form(account creation form for students)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StdForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [fullName, setFullname] = useState('');\n  const [batches, setBatches] = useState('');\n  const [stream, setStream] = useState('');\n  const styles = {\n    header: {\n      backgroundImage: `url(${background})`,\n      height: '100vh',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover'\n    },\n    content: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: 'rgba(255, 255, 255, 0.3)'\n    }\n  };\n  /*function handleChanges(event){\r\n      const{name,value} =  event.target;\r\n        setValue(prevValues =>{\r\n          return{\r\n              ...prevValues,\r\n              [name] : value\r\n          }\r\n      })\r\n  }*/\n  //const [values,setValue] = useState({username:'',password:'',fullname:'',stream:'',batch:''});\n  //This is the function to submit data to the database\n\n  const submitForm = e => {\n    e.preventDefault();\n    const newstd = {\n      fullName: fullName,\n      stream: stream,\n      batch: batches,\n      username: username,\n      password: password\n    };\n    axios.post(' http://localhost:4005/app/signup', newstd).then(function (response) {\n      console.log(response);\n      console.log(newstd);\n      history.push('/stdSign');\n    });\n    alert('A name was submitted: ');\n  };\n\n  const [subs] = useState([{\n    id: \"1\",\n    label: \"Physical science\",\n    value: \"Maths\"\n  }, {\n    id: \"2\",\n    label: \"Biological Science\",\n    value: \"physics\"\n  }, {\n    id: \"3\",\n    label: \"Othe Stream\",\n    value: \"chemsitry\"\n  }]);\n  const [batch] = useState([{\n    id: \"1\",\n    label: \" Batch OF 2021 \",\n    value: \"Batch OF 2021\"\n  }, {\n    id: \"2\",\n    label: \"Batch OF 2022 \",\n    value: \"Batch OF 2022\"\n  }, {\n    id: \"3\",\n    label: \"Batch OF 2023\",\n    value: \"Batch OF 2023\"\n  }]);\n  /*Note! i did not use the button component i defined here as styling for this button \r\n  was already in the form template i used*/\n  //This function submits an http request and then sends the user back to the login page\n  //no databinding is done so even though an http request is made no data is sent to the server\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.header,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"form animated flipInX\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign up as a student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginbox\",\n          onSubmit: submitForm,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Fullname\",\n            type: \"text\",\n            id: \"Fullname\",\n            value: fullName,\n            required: true,\n            onChange: e => setFullname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"subject1\",\n            id: \"subject1\",\n            onChange: e => setStream(e.target.value),\n            value: stream,\n            children: subs.map(subs => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: subs.value,\n              children: [subs.label, \" \"]\n            }, Math.random().toString(36).substr(2, 9), true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"subject\",\n            id: \"subject\",\n            onChange: e => setBatches(e.target.value),\n            value: batches,\n            children: batch.map(batch => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: batch.value,\n              children: batch.label\n            }, Math.random().toString(36).substr(2, 9), false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Username\",\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            required: true,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sign\",\n            onClick: submitForm,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StdForm, \"xtLCgk0/3MfEmYJM70NWpmmH+V8=\", false, function () {\n  return [useHistory];\n});\n\n_c = StdForm;\nexport default StdForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StdForm\");","map":{"version":3,"sources":["D:/Docs/Projects/LMS/web-app-test/Web-development-project/frontend/src/components/StdForm.js"],"names":["React","useState","axios","useHistory","background","StdForm","history","username","setUsername","password","setPassword","fullName","setFullname","batches","setBatches","stream","setStream","styles","header","backgroundImage","height","backgroundPosition","backgroundRepeat","backgroundSize","content","width","backgroundColor","submitForm","e","preventDefault","newstd","batch","post","then","response","console","log","push","alert","subs","id","label","value","target","map","Math","random","toString","substr"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom';\r\nimport background from './images/background.jpg'\r\nimport './studentSign.css'\r\n\r\n//This is the student sign in form(account creation form for students)\r\nexport const StdForm = () => {\r\n    const history = useHistory();\r\n\r\n    const [username,setUsername] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [fullName,setFullname] = useState('')\r\n    const [batches,setBatches] = useState('')\r\n    const [stream,setStream] = useState('')\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n    const styles = {\r\n        header: {\r\n          backgroundImage: `url(${background})`,\r\n          height: '100vh',\r\n          backgroundPosition: 'center',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'cover'\r\n        },\r\n      \r\n        content: {\r\n          height: '100%',\r\n          width: '100%',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        }\r\n    }\r\n    /*function handleChanges(event){\r\n        const{name,value} =  event.target;\r\n\r\n        setValue(prevValues =>{\r\n            return{\r\n                ...prevValues,\r\n                [name] : value\r\n            }\r\n        })\r\n    }*/\r\n\r\n\r\n\r\n    //const [values,setValue] = useState({username:'',password:'',fullname:'',stream:'',batch:''});\r\n\r\n    //This is the function to submit data to the database\r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n       const newstd ={\r\n            fullName:fullName,\r\n            stream:stream,\r\n            batch:batches,\r\n            username:username,\r\n            password:password\r\n        }\r\n      \r\n\r\n        axios.post(' http://localhost:4005/app/signup',newstd)\r\n        .then(function(response){\r\n            console.log(response);\r\n            console.log(newstd);\r\n\r\n            history.push('/stdSign');\r\n        }) \r\n\r\n        alert('A name was submitted: ');\r\n    }\r\n\r\n    const [subs] = useState([\r\n        {id:\"1\",label:\"Physical science\", value:\"Maths\"},\r\n        {id:\"2\",label:\"Biological Science\", value:\"physics\"},\r\n        {id:\"3\",label:\"Othe Stream\", value:\"chemsitry\"},\r\n    ]);\r\n\r\n    const [batch] = useState([\r\n        {id:\"1\",label:\" Batch OF 2021 \", value:\"Batch OF 2021\"},\r\n        {id:\"2\",label:\"Batch OF 2022 \", value:\"Batch OF 2022\"},\r\n        {id:\"3\",label:\"Batch OF 2023\", value:\"Batch OF 2023\"},\r\n    ]);\r\n\r\n    /*Note! i did not use the button component i defined here as styling for this button \r\n    was already in the form template i used*/ \r\n\r\n    //This function submits an http request and then sends the user back to the login page\r\n    //no databinding is done so even though an http request is made no data is sent to the server\r\n    return ( \r\n        <div style={styles.header}>\r\n            <div style={styles.content}>\r\n                <section className=\"form animated flipInX\">\r\n                <h2>Sign up as a student</h2>\r\n                <form className=\"loginbox\" onSubmit={submitForm}>\r\n                     <input placeholder=\"Fullname\" type=\"text\" id=\"Fullname\" value={fullName} required onChange={e=> setFullname(e.target.value)}></input>\r\n                     <select name=\"subject1\" id=\"subject1\" onChange={e=>setStream(e.target.value)} value={stream}>\r\n                        {subs.map((subs)=>(\r\n                            <option key={Math.random().toString(36).substr(2,9)} value={subs.value}>{subs.label} </option>\r\n                        ))}\r\n                    </select><br/>\r\n                     <select name=\"subject\" id=\"subject\" onChange={e=>setBatches(e.target.value)} value={batches}>\r\n                        {batch.map((batch)=>(\r\n                            <option key={Math.random().toString(36).substr(2,9)} value={batch.value}>{batch.label}</option>\r\n                        ))}\r\n                    </select><br/>\r\n                    <input placeholder=\"Username\" type=\"text\" id=\"username\" value={username} required onChange={e => setUsername(e.target.value)}></input>\r\n                    <input placeholder=\"Password\" type=\"password\" id=\"password\" value={password} required onChange={e=> setPassword(e.target.value)}></input>\r\n                <button id=\"sign\" onClick={submitForm} >Sign up</button><br/>\r\n                </form>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StdForm"]},"metadata":{},"sourceType":"module"}